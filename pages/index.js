/* eslint-disable @next/next/no-img-element */
import { useEffect, useRef, useState } from "react";
import Head from "next/head";

//data
import courses from "../data/courses.json";

//components
import Carousel from "../components/carousel/Carousel";
import WriteAnimation from "../components/writeAnimation/WriteAnimation";
import Course from "../components/course/Course";
import ObserverComponent from "../components/observerComponent/ObserverComponent";
import Waves from "../components/waves/Waves";
import Carousel3D from "../components/carousel3D/Carousel3D";
import Navbar from "../components/navbar/Navbar";
import ContactModal from "../components/contactModal/ContactModal";
import { AiOutlineMail } from "react-icons/ai";

export default function Home() {
  // refs:
  const headerWrapperRef = useRef(null);
  const projectsRef = useRef(null);
  const coursesRef = useRef(null);
  const coursesWrapperRef = useRef(null);
  const aboutRef = useRef(null);

  const [documentHeight, setDocumentHeight] = useState(0);
  const [windowHeight, setWindowHeight] = useState(0);
  const [scrollPos, setScrollPos] = useState(0);
  const [contactModal, setContactModal] = useState(false);
  useEffect(() => {
    window.addEventListener("scroll", scrollHandler);
    window.addEventListener("resize", resizeHandler);
    setDocumentHeight(
      document.body.offsetHeight || documentElement.offsetHeight
    );
    setWindowHeight(window.innerHeight);
  }, []);
  useEffect(() => {
    // make the document non-scrollable when the contact modal is visible
    document.documentElement.style.overflowY = contactModal
      ? "hidden"
      : "scroll";
  }, [contactModal]);
  function scrollHandler() {
    // keep track of scroll position:
    setScrollPos(document.body.scrollTop || document.documentElement.scrollTop);
  }
  function resizeHandler() {
    setDocumentHeight(
      document.body.offsetHeight || documentElement.offsetHeight
    );
    setWindowHeight(window.innerHeight);
  }

  function scrollToSection(section) {
    switch (section) {
      case "projects":
        projectsRef.current.scrollIntoView();
        break;
      case "courses":
        coursesRef.current.scrollIntoView();
        break;
      case "about":
        aboutRef.current.scrollIntoView();
        break;
      case "contact":
        setContactModal(true);
        break;
      default:
        break;
    }
  }

  return (
    <div>
      <Head>
        <title>Kris Heijnen - Web Developer</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main>
        {/* HEADER */}
        <header className="header">
          <Navbar
            scrollToSection={scrollToSection}
            scrollPos={scrollPos}
            documentHeight={documentHeight}
            windowHeight={windowHeight}
          />
          <div className="header__wrapper" ref={headerWrapperRef}>
            <div className="photo-wrapper">
              <div className="photo"></div>
            </div>
            <div className="group">
              <div>
                <div className="my-name-is">Hi, my name is</div>
                <h1>Kris Heijnen</h1>
              </div>
              <h4 className="mono">
                <WriteAnimation
                  sentence="Front-end web developer"
                  delay={1000}
                />
              </h4>
            </div>
          </div>
          <div className="waves">
            <Waves />
          </div>
        </header>
        {/* PROJECTS */}
        <section className="projects" ref={projectsRef}>
          <h2 className="projects__title">Projects</h2>
          <ObserverComponent
            addClass={["link--active"]}
            targetClass={"projects-link"}
            options={{ threshold: "0.5" }}
          >
            <>
              <div className="mobile">
                <Carousel />
              </div>
              <div className="desktop">
                <Carousel3D />
              </div>
            </>
          </ObserverComponent>
        </section>
        {/* COURSES */}
        <section className="courses" ref={coursesRef}>
          <h2 className="courses__title">Education</h2>
          <ObserverComponent
            addClass={["link--active"]}
            targetClass={"courses-link"}
            options={{ threshold: "0.5" }}
          >
            <div className="courses__wrapper" ref={coursesWrapperRef}>
              {courses.map((course, index) => {
                const observerOptions = {
                  threshold: "1.0",
                };
                return (
                  <ObserverComponent
                    addClass={["fade-in-course"]}
                    options={observerOptions}
                    key={course.title}
                  >
                    <Course
                      title={course.title}
                      date={course.date}
                      lastOfArray={index == courses.length - 1}
                    >
                      {course.description}
                    </Course>
                  </ObserverComponent>
                );
              })}
            </div>
          </ObserverComponent>
        </section>
        <section className="about" ref={aboutRef}>
          <h2 className="about__title">About me</h2>

          <ObserverComponent
            addClass={["link--active"]}
            targetClass={"about-link"}
            options={{ threshold: "0.5" }}
          >
            <div className="about__wrapper">
              <i>
                My goal is to become a experienced web developer that is fully
                capable of writing readable and performant code, using the
                latest technologies.
              </i>
              <p>
                I{"'"}m a self taught developer that has done a bit of
                freelancing. Right now my focus is getting work experience in a
                team. I would love to be working with a front-end
                framework/library such as{" "}
                <span className="mono normalize">ReactJS</span>. There is
                something really satisfactory about implementing code, and to
                see it work. I love the creativity and technological
                understanding it requirers. <br />
                <br /> I{"'"}m the kind of person that likes to solve puzzles.
                In my spear time I love to go over to{" "}
                <a
                  href="https://www.codewars.com/users/droomoord"
                  target="_blank"
                  className="mono normalize"
                  rel="noreferrer"
                >
                  Codewars.com
                </a>{" "}
                and try to solve algorithms.
              </p>
              <p>Feel free to contact me about anything!</p>
              <button
                className="contact-button"
                onClick={() => setContactModal(true)}
              >
                <AiOutlineMail size="1.2em" /> <span>Contact me!</span>
              </button>
              {contactModal && (
                <ContactModal removeModal={() => setContactModal(false)} />
              )}
            </div>
          </ObserverComponent>
        </section>
      </main>

      <footer></footer>
    </div>
  );
}
